Assignment  2:- 

q-1: Write the code, one line for each action: 
ans:
a)Create an empty object user: 
	let user = {};
b)Add the property name with the value John: 
	user.name = "John";
c)Add the property surname with the value Smith: 
	user.surname = "Smith";
d) Change the value of the name to Pete: 
	user.name = "Pete"; 
e) Remove the property name from the object: 
	delete user.name;
 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

q-2:  Is array copied?
	let fruits = ["Apples", "Pear", "Orange"]; // push a new value into the "copy" let shoppingCart = fruits; shoppingCart.push("Banana"); // what's infruits?
	alert( fruits.length ); // ?
ans: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    

<script>
   let fruits = ["Apples", "Pear", "Orange"];

    let shoppingCart = fruits;

    shoppingCart.push("Banana");

    alert( fruits.length ); // 4
</script>
</body>
</html>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

q-3: Map to names
	let john = { name: "John", age: 25 }; let pete = { name: "Pete", age: 30 }; let mary = { name: "Mary", age: 28 }; let users = [ john, pete, mary ]; let names = 	/* ... your code */ alert( names ); // John, Pete, Mary
ans: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    

<script>
    let john = { name: "John", age: 25 };
    let pete = { name: "Pete", age: 30 };
    let mary = { name: "Mary", age: 28 };

    let users = [ john, pete, mary ];

    let names = users.map(item => item.name);

    alert( names ); // John, Pete, Mary
</script>
</body>
</html>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

q-4: Map to objects
	let john = { name: "John", surname: "Smith", id: 1 }; let pete = { name: "Pete", surname: "Hunt", id: 2 }; let mary = { name: "Mary", surname: "Key", id: 3 }; 	let users = [ john, pete, mary ]; let usersMapped = /* ... your code ... */
/*
usersMapped = [ { fullName: "John Smith", id: 1 }, { fullName: "Pete Hunt", id: 2 }, { fullName: "Mary Key", id: 3 } ]
*/ alert( usersMapped[0].id ) // 1 alert( usersMapped[0].fullName ) // John Smith
ans: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    

<script>
    let john = { name: "John", surname: "Smith", id: 1 };
    let pete = { name: "Pete", surname: "Hunt", id: 2 };
    let mary = { name: "Mary", surname: "Key", id: 3 };

    let users = [ john, pete, mary ];

    let usersMapped = users.map(user => ({
    fullName: `${user.name} ${user.surname}`,
    id: user.id
    }));

    alert( usersMapped[0].id ); // 1
    alert( usersMapped[0].fullName ); // John Smith
</script>
</body>
</html>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

q-5: Sum the properties There is a salaries object with arbitrary number of salaries. Write the function sumSalaries(salaries) that returns the sum of all salaries using Object.values and the for..of loop.If salaries is empty, then the result must be 0.
let salaries = { "John": 100, "Pete": 300, "Mary": 250}; alert( sumSalaries(salaries) ); // 650
ans: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    

<script>
    function sumSalaries(salaries) {

    let sum = 0;
    for (let salary of Object.values(salaries)) {
    sum += salary;
    }

    return sum; // 650
    }

    let salaries = {
    "John": 100,
    "Pete": 300,
    "Mary": 250
    };

    alert( sumSalaries(salaries) ); // 650
</script>
</body>
</html>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

q-6: Destructuring assignment We have an object: Write the Destructuring assignment that reads:
a) Name property into the variable name.
b) Yearâ€™s property into the variable age.
c) isAdmin property into the variable isAdmin (false, if no such property)
d) let user = { name: "John", years: 30};
ans: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    

<script>
    let user = {
        name: "John",
        years: 30
    };

    let {name, years: age, isAdmin = false} = user;

    alert( name ); // John
    alert( age ); // 30
    alert( isAdmin ); // false
</script>
</body>
</html>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

q-7: Turn the object into JSON and back Turn the user into JSON and then read it back into another variable.
user = { name: "John Smith", age: 35};
ans: <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    

<script>
    let user = {
        name: "John Smith",
        age: 35
    };

    let user2 = JSON.parse(JSON.stringify(user));
</script>
</body>
</html>




